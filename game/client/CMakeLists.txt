set(PROJECT client)

set(BUILD_REPLAY 1)
set(GAME cstrike)

set(SOURCES
    replay/replaycamera.cpp
    replay/cdll_replay.cpp

    hl2/C_Func_Monitor.cpp
	geiger.cpp
	history_resource.cpp
	hud_weapon.cpp
	train.cpp
	${SRCDIR}/game/shared/weapon_parse_default.cpp
	${SRCDIR}/game/shared/achievement_saverestore.cpp
	${SRCDIR}/game/shared/achievementmgr.cpp
	${SRCDIR}/game/shared/achievements_hlx.cpp
	achievement_notification_panel.cpp
	${SRCDIR}/game/shared/activitylist.cpp
	alphamaterialproxy.cpp
	${SRCDIR}/game/shared/ammodef.cpp
	animatedentitytextureproxy.cpp
	animatedoffsettextureproxy.cpp
	animatedtextureproxy.cpp
	AnimateSpecificTextureProxy.cpp
	${SRCDIR}/game/shared/animation.cpp
	${SRCDIR}/game/shared/base_playeranimstate.cpp
	${SRCDIR}/game/shared/baseachievement.cpp
	baseanimatedtextureproxy.cpp
	baseclientrendertargets.cpp
	${SRCDIR}/game/shared/basecombatcharacter_shared.cpp
	${SRCDIR}/game/shared/basecombatweapon_shared.cpp
	${SRCDIR}/game/shared/baseentity_shared.cpp
	${SRCDIR}/game/shared/basegrenade_shared.cpp
	${SRCDIR}/game/shared/baseparticleentity.cpp
	${SRCDIR}/game/shared/baseplayer_shared.cpp
	${SRCDIR}/game/shared/baseprojectile.cpp
	${SRCDIR}/game/shared/baseviewmodel_shared.cpp
	beamdraw.cpp
	${SRCDIR}/game/shared/beam_shared.cpp
	${SRCDIR}/public/bone_accessor.cpp
	bone_merge_cache.cpp
	c_ai_basehumanoid.cpp
	c_ai_basenpc.cpp
	c_baseanimating.cpp
	c_baseanimatingoverlay.cpp
	c_basecombatcharacter.cpp
	c_basecombatweapon.cpp
	c_basedoor.cpp
	c_baseentity.cpp
	c_baseflex.cpp
	c_baseplayer.cpp
	c_baseviewmodel.cpp
	c_breakableprop.cpp
	c_colorcorrection.cpp
	c_colorcorrectionvolume.cpp
	c_dynamiclight.cpp
	c_entitydissolve.cpp
	c_entityparticletrail.cpp
	c_env_fog_controller.cpp
	c_env_particlescript.cpp
	c_env_projectedtexture.cpp
	c_env_screenoverlay.cpp
	c_env_tonemap_controller.cpp
	c_fire_smoke.cpp
	c_fish.cpp
	c_func_areaportalwindow.cpp
	c_func_breakablesurf.cpp
	c_func_conveyor.cpp
	c_func_dust.cpp
	c_func_lod.cpp
	c_func_occluder.cpp
	c_func_reflective_glass.cpp
	c_func_rotating.cpp
	c_func_smokevolume.cpp
	c_func_tracktrain.cpp
	c_gib.cpp
	c_hairball.cpp
	c_info_overlay_accessor.cpp
	c_lightglow.cpp
	C_MaterialModifyControl.cpp
	c_particle_system.cpp
	c_physbox.cpp
	c_physicsprop.cpp
	c_physmagnet.cpp
	c_pixel_visibility.cpp
	c_plasma.cpp
	c_playerresource.cpp
	c_point_camera.cpp
	c_point_commentary_node.cpp
	c_props.cpp
	c_ragdoll_manager.cpp
	c_rope.cpp
	c_rumble.cpp
	c_sceneentity.cpp
	c_shadowcontrol.cpp
	c_slideshow_display.cpp
	c_soundscape.cpp
	c_spotlight_end.cpp
	c_sprite.cpp
	c_sprite_perfmonitor.cpp
	c_sun.cpp
	c_team.cpp
	c_tesla.cpp
	c_test_proxytoggle.cpp
	c_user_message_register.cpp
	c_vehicle_choreo_generic.cpp
	c_vehicle_jeep.cpp
	c_vguiscreen.cpp
	hl2/c_waterbullet.cpp
	hl2/hud_autoaim.cpp
	C_WaterLODControl.cpp
	c_world.cpp
	${SRCDIR}/game/shared/cam_thirdperson.cpp
	camomaterialproxy.cpp
	cdll_client_int.cpp
	cdll_bounded_cvars.cpp
	cdll_util.cpp
	cl_mat_stub.cpp
	classmap.cpp
	client_factorylist.cpp
	client_thinklist.cpp
	client_virtualreality.cpp
	clienteffectprecachesystem.cpp
	cliententitylist.cpp
	clientleafsystem.cpp
	clientmode_shared.cpp
	clientshadowmgr.cpp
	clientsideeffects.cpp
	clientsideeffects_test.cpp
	clientsteamcontext.cpp
	colorcorrectionmgr.cpp
	commentary_modelviewer.cpp
	${SRCDIR}/game/shared/collisionproperty.cpp
	${SRCDIR}/game/shared/death_pose.cpp
	${SRCDIR}/game/shared/debugoverlay_shared.cpp
	${SRCDIR}/game/shared/decals.cpp
	detailobjectsystem.cpp
	dummyproxy.cpp
	${SRCDIR}/game/shared/effect_dispatch_data.cpp
	EffectsClient.cpp
	${SRCDIR}/game/shared/ehandle.cpp
	${SRCDIR}/game/shared/entitylist_base.cpp
	entityoriginmaterialproxy.cpp
	${SRCDIR}/game/shared/EntityParticleTrail_Shared.cpp
	${SRCDIR}/game/shared/env_detail_controller.cpp
	${SRCDIR}/game/shared/env_wind_shared.cpp
	${SRCDIR}/game/shared/eventlist.cpp
	flashlighteffect.cpp
	${SRCDIR}/game/shared/func_ladder.cpp
	functionproxy.cpp
	fx_blood.cpp
	fx_cube.cpp
	fx_explosion.cpp
	fx_fleck.cpp
	fx_impact.cpp
	fx_interpvalue.cpp
	fx_quad.cpp
	fx_shelleject.cpp
	fx_staticline.cpp
	fx_tracer.cpp
	fx_trail.cpp
	fx_water.cpp
	${SRCDIR}/game/shared/gamemovement.cpp
	${SRCDIR}/game/shared/gamerules.cpp
	${SRCDIR}/game/shared/gamerules_register.cpp
	${SRCDIR}/game/shared/GameStats.cpp
	${SRCDIR}/game/shared/gamestringpool.cpp
	gametrace_client.cpp
	${SRCDIR}/game/shared/gamevars_shared.cpp
	glow_outline_effect.cpp
	glow_overlay.cpp
	${SRCDIR}/game/shared/hintmessage.cpp
	${SRCDIR}/game/shared/hintsystem.cpp
	hltvcamera.cpp
	hud.cpp
	hud_animationinfo.cpp
	hud_basechat.cpp
	hud_basetimer.cpp
	hud_bitmapnumericdisplay.cpp
	hud_closecaption.cpp
	hud_crosshair.cpp
	hud_element_helper.cpp
	hl2/hud_filmdemo.cpp
	hl2/hud_hdrdemo.cpp
	hud_hintdisplay.cpp
	hud_msg.cpp
	hud_numericdisplay.cpp
	hud_pdump.cpp
	hud_redraw.cpp
	hud_vehicle.cpp
	${SRCDIR}/game/shared/igamesystem.cpp
	in_camera.cpp
	in_joystick.cpp
	in_main.cpp
	in_steamcontroller.cpp
	initializer.cpp
	interpolatedvar.cpp
	IsNPCProxy.cpp
	lampbeamproxy.cpp
	lamphaloproxy.cpp
	${SRCDIR}/game/shared/mapentities_shared.cpp
	mathproxy.cpp
	matrixproxy.cpp
	menu.cpp
	message.cpp
	movehelper_client.cpp
	${SRCDIR}/game/shared/movevars_shared.cpp
	${SRCDIR}/game/shared/multiplay_gamerules.cpp
	${SRCDIR}/game/shared/obstacle_pushaway.cpp
	panelmetaclassmgr.cpp
	particle_collision.cpp
	particle_litsmokeemitter.cpp
	${SRCDIR}/game/shared/particle_parse.cpp
	${SRCDIR}/game/shared/particle_property.cpp
	particle_proxies.cpp
	particle_simple3d.cpp
	particlemgr.cpp
	particles_attractor.cpp
	particles_ez.cpp
	particles_localspace.cpp
	particles_new.cpp
	particles_simple.cpp
	${SRCDIR}/game/shared/particlesystemquery.cpp
	perfvisualbenchmark.cpp
	physics.cpp
	physics_main_client.cpp
	${SRCDIR}/game/shared/physics_main_shared.cpp
	${SRCDIR}/game/shared/physics_saverestore.cpp
	${SRCDIR}/game/shared/physics_shared.cpp
	physpropclientside.cpp
	playerandobjectenumerator.cpp
	playerspawncache.cpp
	${SRCDIR}/game/shared/point_bonusmaps_accessor.cpp
	${SRCDIR}/game/shared/point_posecontroller.cpp
	${SRCDIR}/game/shared/precache_register.cpp
	${SRCDIR}/game/shared/predictableid.cpp
	prediction.cpp
	${SRCDIR}/game/shared/predictioncopy.cpp
	${SRCDIR}/game/shared/props_shared.cpp
	proxyentity.cpp
	ProxyHealth.cpp
	proxyplayer.cpp
	proxypupil.cpp
	ragdoll.cpp
	${SRCDIR}/game/shared/ragdoll_shared.cpp
	recvproxy.cpp
	basepresence.cpp # [$WIN32||$POSIX]
	# basepresence_xbox.cpp # [$X360]
	${SRCDIR}/game/shared/rope_helpers.cpp
	${SRCDIR}/game/shared/saverestore.cpp
	${SRCDIR}/game/shared/sceneentity_shared.cpp
	ScreenSpaceEffects.cpp
	${SRCDIR}/game/shared/sequence_Transitioner.cpp
	simple_keys.cpp
	${SRCDIR}/game/shared/simtimer.cpp
	${SRCDIR}/game/shared/singleplay_gamerules.cpp
	${SRCDIR}/game/shared/SoundEmitterSystem.cpp
	${SRCDIR}/game/shared/soundenvelope.cpp
	${SRCDIR}/public/SoundParametersInternal.cpp
	splinepatch.cpp
	${SRCDIR}/game/shared/Sprite.cpp
	spritemodel.cpp
	${SRCDIR}/game/shared/SpriteTrail.cpp
	${SRCDIR}/game/shared/studio_shared.cpp
	studio_stats.cpp
	${SRCDIR}/game/shared/takedamageinfo.cpp
	${SRCDIR}/game/shared/teamplay_gamerules.cpp
	${SRCDIR}/game/shared/teamplayroundbased_gamerules.cpp
	${SRCDIR}/game/shared/test_ehandle.cpp
	text_message.cpp
	texturescrollmaterialproxy.cpp
	timematerialproxy.cpp
	toggletextureproxy.cpp
	${SRCDIR}/game/shared/usercmd.cpp
	${SRCDIR}/game/shared/usermessages.cpp
	${SRCDIR}/game/shared/util_shared.cpp
	${SRCDIR}/game/shared/vehicle_viewblend_shared.cpp
	vgui_avatarimage.cpp
	vgui_basepanel.cpp
	vgui_bitmapbutton.cpp
	vgui_bitmapimage.cpp
	vgui_bitmappanel.cpp
	vgui_schemevisualizer.cpp
	vgui_centerstringpanel.cpp
	vgui_consolepanel.cpp
	vgui_debugoverlaypanel.cpp
	vgui_fpspanel.cpp
	vgui_game_viewport.cpp
	vgui_grid.cpp
	vgui_int.cpp
	vgui_loadingdiscpanel.cpp
	vgui_messagechars.cpp
	vgui_netgraphpanel.cpp
	vgui_slideshow_display_screen.cpp
	view.cpp
	view_beams.cpp
	view_effects.cpp
	view_scene.cpp
	viewangleanim.cpp
	ViewConeImage.cpp
	viewdebug.cpp
	viewpostprocess.cpp
	viewrender.cpp
	${SRCDIR}/game/shared/voice_banmgr.cpp
	${SRCDIR}/game/shared/voice_status.cpp
	warp_overlay.cpp
	WaterLODMaterialProxy.cpp
	${SRCDIR}/game/shared/weapon_parse.cpp
	weapon_selection.cpp
	weapons_resource.cpp
	WorldDimsProxy.cpp
	vgui_video.cpp
	vgui_video_player.cpp
	${SRCDIR}/game/shared/mp_shareddefs.cpp
	${SRCDIR}/game/client/c_vote_controller.cpp
	#//Haptics
	${SRCDIR}/public/haptics/haptic_msgs.cpp # [!$X360]
	$<$<BOOL:${WINDOWS}>:${SRCDIR}/public/haptics/haptic_utils.cpp> # [$WIN32 && !$X360]
# Sixense
    sixense/in_sixense.cpp
	sixense/in_sixense_gesture_bindings.cpp
	${SRCDIR}/game/shared/sixense/sixense_convars.cpp

    ${SRCDIR}/public/bone_setup.cpp
	${SRCDIR}/public/posedebugger.cpp
	${SRCDIR}/public/client_class.cpp
	${SRCDIR}/common/compiledcaptionswap.cpp
	${SRCDIR}/public/collisionutils.cpp
	${SRCDIR}/public/crtmemdebug.cpp
	${SRCDIR}/public/dt_recv.cpp
	${SRCDIR}/public/dt_utlvector_common.cpp
	${SRCDIR}/public/dt_utlvector_recv.cpp
	${SRCDIR}/public/filesystem_helpers.cpp
	${SRCDIR}/public/interpolatortypes.cpp
	${SRCDIR}/game/shared/interval.cpp
	${SRCDIR}/common/language.cpp
	${SRCDIR}/public/networkvar.cpp
	${SRCDIR}/common/randoverride.cpp
	${SRCDIR}/common/steamid.cpp
	${SRCDIR}/public/rope_physics.cpp
	${SRCDIR}/public/scratchpad3d.cpp
	${SRCDIR}/public/ScratchPadUtils.cpp
	${SRCDIR}/public/sentence.cpp
	${SRCDIR}/game/shared/sheetsimulator.cpp
	${SRCDIR}/public/simple_physics.cpp
	${SRCDIR}/public/stringregistry.cpp
	${SRCDIR}/public/studio.cpp
	${SRCDIR}/public/vallocator.cpp
	${SRCDIR}/public/vgui_controls/vgui_controls.cpp
	${SRCDIR}/public/jigglebones.cpp
	hud_lcd.cpp
	in_mouse.cpp
	mumble.cpp
	${SRCDIR}/public/renamed_recvtable_compat.cpp
	rendertexture.cpp

    stdafx.cpp
# Temporary Entities
    c_basetempentity.cpp
	c_effects.cpp
	c_impact_effects.cpp
	c_movie_explosion.cpp
	c_particle_fire.cpp
	c_particle_smokegrenade.cpp
	c_prop_vehicle.cpp
	c_recipientfilter.cpp
	c_smoke_trail.cpp
	c_smokestack.cpp
	c_steamjet.cpp
	c_stickybolt.cpp
	c_te.cpp
	c_te_armorricochet.cpp
	c_te_basebeam.cpp
	c_te_beamentpoint.cpp
	c_te_beaments.cpp
	c_te_beamfollow.cpp
	c_te_beamlaser.cpp
	c_te_beampoints.cpp
	c_te_beamring.cpp
	c_te_beamringpoint.cpp
	c_te_beamspline.cpp
	c_te_bloodsprite.cpp
	c_te_bloodstream.cpp
	c_te_breakmodel.cpp
	c_te_bspdecal.cpp
	c_te_bubbles.cpp
	c_te_bubbletrail.cpp
	c_te_clientprojectile.cpp
	c_te_decal.cpp
	c_te_dynamiclight.cpp
	c_te_effect_dispatch.cpp
	c_te_energysplash.cpp
	c_te_explosion.cpp
	c_te_fizz.cpp
	c_te_footprint.cpp
	c_te_glassshatter.cpp
	c_te_glowsprite.cpp
	c_te_impact.cpp
	c_te_killplayerattachments.cpp
	c_te_largefunnel.cpp
	c_te_legacytempents.cpp
	c_te_muzzleflash.cpp
	c_te_particlesystem.cpp
	c_te_physicsprop.cpp
	c_te_playerdecal.cpp
	c_te_projecteddecal.cpp
	c_te_showline.cpp
	c_te_smoke.cpp
	c_te_sparks.cpp
	c_te_sprite.cpp
	c_te_spritespray.cpp
	c_te_worlddecal.cpp
	c_testtraceline.cpp
	c_tracer.cpp
	fx.cpp
	fx_discreetline.cpp
	fx_envelope.cpp
	fx_line.cpp
	fx_sparks.cpp
	particlesphererenderer.cpp
	smoke_fog_overlay.cpp
# game_controls
    game_controls/baseviewport.cpp
	game_controls/basemodelpanel.cpp
	game_controls/basemodel_panel.cpp
	game_controls/ClientScoreBoardDialog.cpp
	game_controls/commandmenu.cpp
	game_controls/intromenu.cpp
	game_controls/MapOverview.cpp
	game_controls/NavProgress.cpp
	game_controls/SpectatorGUI.cpp
	game_controls/teammenu.cpp
	game_controls/vguitextwindow.cpp
	game_controls/IconPanel.cpp
# MP3 [$WIN32||$POSIX]
    mp3player.cpp
# Tool Framework
    ${SRCDIR}/public/tools/bonelist.cpp
	entity_client_tools.cpp
	toolframework_client.cpp
)

if(BUILD_REPLAY)
    list(APPEND SOURCES
        #Replay
        replay/gamedefs.cpp
        replay/replay_ragdoll.cpp
        replay/replay_screenshot.cpp
        replay/replayperformanceplaybackhandler.cpp
        replay/replayrenderer.cpp
        replay/replayvideo.cpp
        replay/genericclassbased_replay.cpp
        ${SRCDIR}/game/shared/replay_gamestats_shared.cpp
        ${SRCDIR}/game/client/youtubeapi.cpp
        #UI
        replay/vgui/replaybrowserbasepage.cpp
        replay/vgui/replaybrowserbasepanel.cpp
        replay/vgui/replayconfirmquitdlg.cpp
        replay/vgui/replaybrowserdetailspanel.cpp
        replay/vgui/replaybrowseritemmanager.cpp
        replay/vgui/replaybrowserlistitempanel.cpp
        replay/vgui/replaybrowserlistpanel.cpp
        replay/vgui/replaybrowsermainpanel.cpp
        replay/vgui/replaybrowsermovieplayerpanel.cpp
        replay/vgui/replaybrowserpreviewpanel.cpp
        replay/vgui/replaybrowserrenderdialog.cpp
        replay/vgui/replayinputpanel.cpp
        replay/vgui/replaymessagepanel.cpp
        replay/vgui/replayperformanceeditor.cpp
        replay/vgui/replayperformancesavedlg.cpp
        replay/vgui/replayrenderoverlay.cpp
        replay/vgui/replayreminderpanel.cpp
        replay/replayyoutubeapi.cpp
        replay/replayyoutubeapi_key.cpp # [!$SOURCESDK]
        # replay/replayyoutubeapi_key_sdk.cpp # [$SOURCESDK]
        game_controls/slideshowpanel.cpp
        ${SRCDIR}/common/movieobjects/timeutils.cpp
    )
endif()

if(${GAME} STREQUAL cstrike)
    include(client_cstrike.cmake)
endif()

add_library(${PROJECT} SHARED ${SOURCES})

#FILESYSTEM_STDIO_EXPORTS DONT_PROTECT_FILEIO_FUNCTIONS PROTECTED_THINGS_ENABLE" [$WIN64]
#
target_compile_definitions(${PROJECT} PRIVATE
    NO_STRING_T CLIENT_DLL VECTOR VERSION_SAFE_STEAM_API_INTERFACES
	# PROTECTED_THINGS_ENABLE
    strncpy=use_Q_strncpy_instead _snprintf=use_Q_snprintf_instead
    $<$<BOOL:${WINDOWS}>:fopen=dont_use_fopen>
    $<$<BOOL:${LINUX}>:USE_WEBM_FOR_REPLAY>
    ${GAME_DEFINES}
)
target_include_directories(${PROJECT} PRIVATE
    ${SRCDIR}/game/client
    ${SRCDIR}/game/client/game_controls
    ${SRCDIR}/game/shared
    ${GAME_INCLUDES}
)

target_link_libraries(${PROJECT} PRIVATE
	bitmap
	choreoobjects
	particles
	dmxloader
	vgui_controls
	matsys_controls
	tier0 tier1 tier2 tier3
	mathlib
	vstdlib
	vtf
	steam_api
    $<$<BOOL:${LINUX}>:rt>
)
install(TARGETS ${PROJECT} DESTINATION ${GAME}/bin)